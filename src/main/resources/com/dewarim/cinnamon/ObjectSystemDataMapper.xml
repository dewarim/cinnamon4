<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dewarim.cinnamon.model.ObjectSystemData">

    <resultMap id="osdMap" type="com.dewarim.cinnamon.model.ObjectSystemData">
        <id property="id" column="id"/>
        <result property="contentHash" column="content_hash"/>
        <result property="contentPath" column="content_path"/>
        <result property="contentSize" column="content_size"/>
        <result property="created" column="created"/>
        <result property="latestBranch" column="latest_branch"/>
        <result property="latestHead" column="latest_head"/>
        <result property="modified" column="modified"/>
        <result property="name" column="name"/>
        <result property="cmnVersion" column="cmn_version"/>
        <result property="aclId" column="acl_id"/>
        <result property="creatorId" column="creator_id"/>
        <result property="formatId" column="format_id"/>
        <result property="languageId" column="language_id"/>
        <result property="lockerId" column="locker_id"/>
        <result property="modifierId" column="modifier_id"/>
        <result property="ownerId" column="owner_id"/>
        <result property="parentId" column="parent_id"/>
        <result property="predecessorId" column="predecessor_id"/>
        <result property="rootId" column="root_id"/>
        <result property="typeId" column="type_id"/>
        <result property="lifecycleStateId" column="state_id"/>
        <result property="contentChanged" column="content_changed"/>
        <result property="metadataChanged" column="metadata_changed"/>
        <result property="summary" column="summary"/>
    </resultMap>

    <resultMap id="tinyOwnableMap" type="com.dewarim.cinnamon.api.TinyOwnable">
        <result column="id" property="id"/>
        <result column="owner_id" property="ownerId"/>
        <result column="acl_id" property="aclId"/>
    </resultMap>

    <resultMap id="rootAndLatestHeadMap" type="com.dewarim.cinnamon.api.RootAndLatestHead">
        <result column="id" property="headId"/>
        <result column="root_id" property="rootId"/>
    </resultMap>
    <resultMap id="idAndRootMap" type="com.dewarim.cinnamon.api.IdAndRootId">
        <result column="id" property="id"/>
        <result column="root_id" property="rootId"/>
    </resultMap>

    <select id="getOsdsById" parameterType="map" resultMap="osdMap">
        SELECT
        id,
        content_hash,
        content_path,
        content_size,
        created,
        latest_branch,
        latest_head,
        modified,
        name,
        cmn_version,
        acl_id,
        creator_id,
        format_id,
        language_id,
        locker_id,
        modifier_id,
        owner_id,
        parent_id,
        predecessor_id,
        root_id,
        type_id,
        state_id,
        content_changed,
        metadata_changed,
        CASE WHEN #{includeSummary} THEN summary ELSE null END AS summary

        FROM objects
        WHERE id IN
        <foreach item="item" index="index" collection="ids" open="(" separator="," close=")">
            #{item,jdbcType=BIGINT}
        </foreach>
    </select>


    <select id="getOsdIdByIdWithDescendants" parameterType="long" resultType="Long">
        SELECT id
        FROM objects
        WHERE id in (with recursive osdId (id, predecessor_id, root_id)
                                        as (select o.id, o.predecessor_id, o.root_id
                                            from objects o
                                            where o.predecessor_id = #{id}
                                            union
                                            select child.id, child.predecessor_id, child.root_id
                                            from osdId parent,
                                                 objects child
                                            WHERE child.predecessor_id = parent.id)
                     SELECT id
                     FROM osdId)
    </select>


    <select id="getOsdsByFolderId" parameterType="map" resultMap="osdMap">
        SELECT id,
               content_hash,
               content_path,
               content_size,
               created,
               latest_branch,
               latest_head,
               modified,
               name,
               cmn_version,
               acl_id,
               creator_id,
               format_id,
               language_id,
               locker_id,
               modifier_id,
               owner_id,
               parent_id,
               predecessor_id,
               root_id,
               type_id,
               state_id,
               content_changed,
               metadata_changed,
               CASE
                   WHEN #{includeSummary}
                       THEN summary
                   ELSE null END AS summary

        FROM objects
        WHERE parent_id = #{folderId}
            ${versionPredicate}
    </select>

    <select id="com.dewarim.cinnamon.model.ObjectSystemData.getIdAndRoot"
            parameterType="list" resultMap="idAndRootMap">
        select id,
        root_id
        from objects
        where id in
        <foreach item="item" index="index" collection="list"
                 open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <select id="com.dewarim.cinnamon.model.ObjectSystemData.getLatestHeads"
            parameterType="list" resultMap="rootAndLatestHeadMap">
        select id,
               root_id
        from objects
        where root_id in
        <foreach item="item" index="index" collection="list"
                 open="(" separator="," close=")">
            #{item}
        </foreach>
        and latest_head = true
    </select>

    <select id="com.dewarim.cinnamon.model.ObjectSystemData.findLastDescendantVersion" parameterType="long"
            resultMap="osdMap">
        select *
        from objects
        where predecessor_id = #{id}
        order by id desc
    </select>

    <update id="updateOsd">
        UPDATE objects
        SET content_hash     = #{contentHash},
            content_size     = #{contentSize},
            content_path     = #{contentPath},
            created          = #{created},
            latest_branch    = #{latestBranch},
            latest_head      = #{latestHead},
            modified         = #{modified},
            name             = #{name},
            cmn_version      = #{cmnVersion},
            acl_id           = #{aclId},
            creator_id       = #{creatorId},
            format_id        = #{formatId},
            language_id      = #{languageId},
            locker_id        = #{lockerId},
            modifier_id      = #{modifierId},
            owner_id         = #{ownerId},
            parent_id        = #{parentId},
            predecessor_id   = #{predecessorId},
            root_id          = #{rootId},
            type_id          = #{typeId},
            state_id         = #{lifecycleStateId},
            content_changed  = #{contentChanged},
            metadata_changed = #{metadataChanged},
            summary          = #{summary}
        WHERE id = #{id}
    </update>

    <update id="update">
        UPDATE objects
        SET content_hash     = #{contentHash},
            content_size     = #{contentSize},
            content_path     = #{contentPath},
            created          = #{created},
            latest_branch    = #{latestBranch},
            latest_head      = #{latestHead},
            modified         = #{modified},
            name             = #{name},
            cmn_version      = #{cmnVersion},
            acl_id           = #{aclId},
            creator_id       = #{creatorId},
            format_id        = #{formatId},
            language_id      = #{languageId},
            locker_id        = #{lockerId},
            modifier_id      = #{modifierId},
            owner_id         = #{ownerId},
            parent_id        = #{parentId},
            predecessor_id   = #{predecessorId},
            root_id          = #{rootId},
            type_id          = #{typeId},
            state_id         = #{lifecycleStateId},
            content_changed  = #{contentChanged},
            metadata_changed = #{metadataChanged},
            summary          = #{summary}
        WHERE id = #{id}
    </update>

    <insert id="insertOsd" parameterType="com.dewarim.cinnamon.model.ObjectSystemData">
        <selectKey keyProperty="id" resultType="long" order="BEFORE">
            select nextval('seq_folder_and_object_ids')
        </selectKey>
        INSERT INTO objects
        (id,name, content_hash,content_size,content_path,
        created, latest_branch, latest_head,modified, modifier_id,
        cmn_version, acl_id, creator_id,format_id,
        language_id, owner_id,parent_id,
        predecessor_id, root_id, type_id, state_id,
        content_changed, metadata_changed, summary
        )
        values (#{id}, #{name}, #{contentHash}, #{contentSize}, #{contentPath},
        #{created}, #{latestBranch}, #{latestHead}, #{modified}, #{modifierId},
        #{cmnVersion}, #{aclId}, #{creatorId}, #{formatId},
        #{languageId}, #{ownerId}, #{parentId},
        #{predecessorId}, #{rootId}, #{typeId}, #{lifecycleStateId},
        #{contentChanged}, #{metadataChanged}, #{summary})
    </insert>

    <delete id="deleteOsds">
        DELETE FROM objects
        WHERE id IN
        <foreach item="item" index="index" collection="list"
                 open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>


    <select id="getAllById" parameterType="list" resultMap="osdMap">
        SELECT *
        FROM objects
        WHERE id in
        <foreach item="item" index="index" collection="list"
                 open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <select id="getOsdByModifierOrCreatorOrOwnerOrLocker" parameterType="long" resultMap="osdMap">
        SELECT *
        FROM objects
        WHERE owner_id = #{id}
           or modifier_id = #{id}
           or creator_id = #{id}
           or locker_id = #{id}
    </select>

    <select id="getOsdsAsOwnables" parameterType="java.util.List" resultMap="tinyOwnableMap">
        SELECT id,
        acl_id,
        owner_id
        FROM objects
        WHERE id in <foreach item="item" index="index" collection="list" open="(" separator="," close=")">#{item}</foreach>
    </select>

    <!-- should only be used for debugging -->
    <select id="list" resultMap="osdMap">
        SELECT *
        FROM objects
    </select>

    <select id="getOsdsMissingTikaMetaset" resultMap="osdMap">
        SELECT * FROM objects
        WHERE
            content_size > 0 and
            format_id is not null and
            format_id in (select id from formats f where f.index_mode='TIKA')
            and
            id not in (select osd_id from osd_meta om where om.type_id = #{tikaMetasetTypeId})
        LIMIT #{limit}
    </select>

</mapper>