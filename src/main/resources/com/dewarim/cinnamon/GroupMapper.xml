<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dewarim.cinnamon.model.Group">

    <resultMap id="groupMap" type="com.dewarim.cinnamon.model.Group">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="parentId" column="parent_id"/>
    </resultMap>

    <select id="getGroupById" parameterType="long" resultMap="groupMap">
        SELECT *
        FROM groups
        WHERE id = #{id}
    </select>
    <select id="getChildGroupIds" parameterType="list" resultType="long">
        SELECT id
        FROM groups
        WHERE parent_id in
        <foreach item="item" index="index" collection="list"
                 open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <select id="getGroupByName" parameterType="string" resultMap="groupMap">
        SELECT *
        FROM groups
        WHERE name = #{name}
    </select>

    <select id="getGroupsByName" parameterType="list" resultMap="groupMap">
        SELECT *
        FROM groups
        WHERE name in
        <foreach item="item" index="index" collection="list"
                 open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <select id="hasChildren" parameterType="long" resultType="boolean">
        SELECT count(1) > 0 as hasChildren
        FROM groups
        where parent_id = #{id}
    </select>

    <select id="getGroupsOfUserById" parameterType="long" resultMap="groupMap">
        SELECT *
        FROM groups
                 JOIN group_users gu on groups.id = gu.group_id
        WHERE gu.user_id = #{id}
    </select>

    <select id="list" resultMap="groupMap">
        SELECT *
        FROM groups
    </select>

    <update id="update" parameterType="com.dewarim.cinnamon.model.Group">
        UPDATE groups
        SET name     = #{name},
            parent_id= #{parentId}
        WHERE id = #{id}
    </update>

    <insert id="insert" parameterType="com.dewarim.cinnamon.model.Group">
        <selectKey keyProperty="id" resultType="long" order="BEFORE">
            select nextval('seq_group_id')
        </selectKey>
        INSERT INTO groups (id,name, parent_id) VALUES (#{id}, #{name}, #{parentId})
    </insert>

    <delete id="delete" parameterType="list">
        DELETE
        FROM groups
        WHERE id in
        <foreach item="item" index="index" collection="list"
                 open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>

    <select id="getAllById" parameterType="list" resultMap="groupMap">
        SELECT *
        FROM groups
        WHERE id in
        <foreach item="item" index="index" collection="list"
                 open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <select id="getGroupsWithAncestorsOfUserById" resultMap="groupMap">
        with recursive groups_of_user(id, name, parent_id)
                           as (select g.id, name, parent_id
                               from groups g
                               where g.id in (select gu.group_id from group_users gu where gu.user_id = #{userId})
                               union all
                               select child.id,
                                      child.name,
                                      child.parent_id
                               from groups child
                                        join groups_of_user gou on gou.parent_id = child.id)
        select *
        from groups_of_user;
    </select>

    <select id="getGroupIdsWithAncestorsOfUserById" resultType="long">
        with recursive groups_of_user(id, name, parent_id)
                           as (select g.id, name, parent_id
                               from groups g
                               where g.id in (select gu.group_id from group_users gu where gu.user_id = #{userId})
                               union all
                               select child.id,
                                      child.name,
                                      child.parent_id
                               from groups child
                                        join groups_of_user gou on gou.parent_id = child.id)
        select id
        from groups_of_user;
    </select>

</mapper>