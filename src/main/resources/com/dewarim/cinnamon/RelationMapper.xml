<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dewarim.cinnamon.model.relations.Relation">

    <resultMap id="relationMap" type="com.dewarim.cinnamon.model.relations.Relation">
        <id property="id" column="id"/>
        <result property="leftId" column="left_id"/>
        <result property="rightId" column="right_id"/>
        <result property="typeId" column="type_id"/>
        <result property="metadata" column="metadata"/>
    </resultMap>

    <select id="getProtectedRelations" resultMap="relationMap">
        SELECT
        r.id,
        r.left_id,
        r.right_id,
        r.type_id
        FROM relations r join relation_types rt on r.type_id = rt.id
        WHERE
        ( rt.left_object_protected = true and r.left_id in
        <foreach item="item" index="index" collection="list"
                 open="(" separator="," close=")">
            #{item}
        </foreach>
        )
        OR (rt.right_object_protected = true and r.right_id in
        <foreach item="item" index="index" collection="list"
                 open="(" separator="," close=")">
            #{item}
        </foreach>
        )
    </select>

    <select id="getRelationsWithCriteria" parameterType="map" resultMap="relationMap">
        SELECT
        r.id,
        r.left_id,
        r.right_id,
        r.type_id,

        CASE WHEN #{includeMetadata} THEN metadata ELSE null END AS metadata
        FROM relations r join relation_types rt on r.type_id = rt.id
        <where>
            <if test="leftIds != null">
                r.left_id IN
                <foreach item="item" index="index" collection="leftIds"
                         open="(" separator="," close=")">
                    #{item}
                </foreach>
                <if test="rightIds != null or typeIds != null">
                    AND
                </if>
            </if>
            <if test="rightIds != null">
                r.right_id IN
                <foreach item="item" index="index" collection="rightIds"
                         open="(" separator="," close=")">
                    #{item}
                </foreach>
                <if test="typeIds != null">
                    AND
                </if>
            </if>
            <if test="typeIds != null">
                rt.id IN
                <foreach item="item" index="index" collection="typeIds"
                         open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </where>

    </select>

    <select id="getRelationsWithCriteriaOr" parameterType="map" resultMap="relationMap">
        SELECT
        r.id,
        r.left_id,
        r.right_id,
        r.type_id,

        CASE WHEN #{includeMetadata} THEN metadata ELSE null END AS metadata
        FROM relations r join relation_types rt on r.type_id = rt.id
        <where>
          <if test="leftIds != null or rightIds != null ">

            (
            <if test="leftIds != null">
                r.left_id IN
                <foreach item="item" index="index" collection="leftIds"
                         open="(" separator="," close=")">
                    #{item}
                </foreach>
                <if test="rightIds != null">
                    OR
                </if>
            </if>
            <if test="rightIds != null">
                r.right_id IN
                <foreach item="item" index="index" collection="rightIds"
                         open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            )
          </if>

            <if test="typeIds != null">
                AND
                rt.id IN
                <foreach item="item" index="index" collection="typeIds"
                         open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </where>

    </select>

    <insert id="insert" parameterType="com.dewarim.cinnamon.model.relations.Relation">
        <selectKey keyProperty="id" resultType="long" order="BEFORE">
            select nextval('seq_relation_id')
        </selectKey>
        INSERT INTO relations (id, left_id, right_id, type_id, metadata) values
        ( #{id},#{leftId},#{rightId},#{typeId},#{metadata} )
    </insert>

    <delete id="delete" parameterType="list">
        DELETE
        FROM relations
        WHERE id in
        <foreach item="item" index="index" collection="list"
                 open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>

    <delete id="deleteAllUnprotectedRelationsOfObjects" >
        DELETE
        FROM relations
        WHERE id in (
        SELECT
        r.id
        FROM relations r join relation_types rt on r.type_id = rt.id
        WHERE
        ( rt.left_object_protected = false and r.left_id in
        <foreach item="item" index="index" collection="list"
                 open="(" separator="," close=")">
            #{item}
        </foreach>
        )
        OR (rt.right_object_protected = false and r.right_id in
        <foreach item="item" index="index" collection="list"
                 open="(" separator="," close=")">
            #{item}
        </foreach>
        )
        )
    </delete>

    <select id="getRelationsToCopy" parameterType="long" resultMap="relationMap">
        SELECT r.*
        FROM relations r
                 join relation_types rt on r.type_id = rt.id
        WHERE (r.left_id = #{id} and rt.clone_on_left_copy = true)
           or (r.right_id = #{id} and rt.clone_on_right_copy = true)
    </select>

    <select id="getRelationsToCopyOnVersion" parameterType="long" resultMap="relationMap">
        SELECT r.*
        FROM relations r
                 join relation_types rt on r.type_id = rt.id
        WHERE (r.left_id = #{id} and rt.clone_on_left_version = true)
           or (r.right_id = #{id} and rt.clone_on_right_version = true)
    </select>

    <select id="getAllById" parameterType="list" resultMap="relationMap">
        SELECT *
        FROM relations
        WHERE id in
        <foreach item="item" index="index" collection="list"
                 open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

</mapper>