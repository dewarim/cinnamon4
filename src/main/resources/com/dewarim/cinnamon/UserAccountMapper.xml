<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dewarim.cinnamon.model.UserAccount">

    <resultMap id="userAccountMap" type="com.dewarim.cinnamon.model.UserAccount">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="loginType" column="login_type"/>
        <result property="password" column="pwd"/>
        <result property="activated" column="activated"/>
        <result property="locked" column="locked"/>
        <result property="uiLanguageId" column="ui_language_id"/>
        <result property="fullname" column="fullname"/>
        <result property="email" column="email"/>
        <result property="changeTracking" column="change_tracking"/>
        <result property="token" column="token"/>
        <result property="tokensToday" column="tokens_today"/>
        <result property="passwordExpired" column="password_expired"/>
        <result property="activateTriggers" column="activate_triggers"/>
        <result property="config" column="config"/>
    </resultMap>

    <select id="getUserAccountByName" parameterType="String" resultMap="userAccountMap">
        SELECT *
        FROM users
        WHERE name = #{name}
    </select>

    <select id="getUserAccountById" parameterType="Long" resultMap="userAccountMap">
        SELECT *
        FROM users
        WHERE id = #{id}
    </select>

    <parameterMap id="statusMap" type="map">
        <parameter property="userId" javaType="long" jdbcType="BIGINT"/>
        <parameter property="superuserGroupName" javaType="string" jdbcType="VARCHAR"/>
    </parameterMap>
    <select id="getSuperuserStatus" parameterMap="statusMap" resultType="long">
        select u.id
        from users u
                 JOIN group_users gu ON u.id = gu.user_id
        where u.id = #{userId}
          and gu.group_id in (select g.id
                              from groups g
                              where g.name = #{superuserGroupName})
    </select>

    <update id="changeUserActivationStatus" parameterType="com.dewarim.cinnamon.model.UserAccount">
        UPDATE users
        SET activated = #{activated}
        WHERE id = #{id}
    </update>

    <select id="listActiveUserAccounts" resultMap="userAccountMap">
        SELECT *
        FROM users
        WHERE activated = true
          and locked = false
    </select>

    <select id="list" resultMap="userAccountMap">
        SELECT *
        FROM users
    </select>

    <update id="update">
        UPDATE users
        SET name             = #{name},
            login_type       = #{loginType},
            pwd              = #{password},
            activated        = #{activated},
            locked           = #{locked},
            ui_language_id   = #{uiLanguageId},
            fullname         = #{fullname},
            email            = #{email},
            change_tracking  = #{changeTracking},
            token            = #{token},
            tokens_today     = #{tokensToday},
            password_expired = #{passwordExpired},
            activate_triggers= #{activateTriggers},
            config           = #{config}
        WHERE id = #{id}
    </update>

    <insert id="insert" parameterType="com.dewarim.cinnamon.model.UserAccount">
        <selectKey keyProperty="id" resultType="long" order="BEFORE">
            select nextval('seq_user_id')
        </selectKey>
        INSERT INTO users (id, name, login_type, pwd, activated, locked,
        ui_language_id, fullname, email, change_tracking, tokens_today,
        password_expired, activate_triggers, config)
        VALUES( #{id}, #{name}, #{loginType}, #{password}, #{activated}, #{locked},
        #{uiLanguageId},
        #{fullname}, #{email}, #{changeTracking}, 0, false, #{activateTriggers}, #{config})
    </insert>

    <select id="getAllById" parameterType="list" resultMap="userAccountMap">
        SELECT *
        FROM users
        WHERE id in
        <foreach item="item" index="index" collection="list"
                 open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <delete id="delete" parameterType="list">
        DELETE FROM users
        WHERE id in
        <foreach item="item" index="index" collection="list"
                 open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>

</mapper>